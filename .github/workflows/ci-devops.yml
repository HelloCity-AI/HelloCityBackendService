name: CI Devops

on:
  # pull_request:
  #   branches: [ main, develop ]
  # for testing purpose
  # push:
  #   branches: [ DEVOPS-val ]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  compose-ci:
    runs-on: ubuntu-latest

    env:
      POSTGRES_USER: root
      POSTGRES_DB: HelloCityDb
      # stored in repo secrets
      POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }} 
      ASPNETCORE_ENVIRONMENT: Development

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # cache NuGet packages to speed up builds
      - name: Set up .NET 8 (with cache)
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          cache: true
          cache-dependency-path: '**/*.csproj'

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test (with coverage)
        run: dotnet test --configuration Release --no-build --collect:"XPlat Code Coverage"

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: '**/coverage.cobertura.xml'
          if-no-files-found: ignore

      # ---- Docker Compose: build & run API + Postgres ----
      - name: Build API image
        run: docker compose -f compose.yaml build hellocity.api

      - name: Start services
        run: docker compose -f compose.yaml up -d postgres hellocity.api

      # ---- Health check (API + DB) ----
      - name: Wait for API health
        run: |
          for i in {1..120}; do
            status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:5050/health)
            if [ "$status" -eq 200 ]; then
              echo "API is healthy"; exit 0
            fi
            echo "Waiting for API... (HTTP $status)"
            sleep 2
          done
          echo "API did not become healthy in time"; exit 1

      - name: Collect logs
        if: always()
        run: |
          docker compose -f compose.yaml ps || true
          docker compose -f compose.yaml logs --no-color postgres > postgres.log || true
          docker compose -f compose.yaml logs --no-color hellocity.api > api.log || true

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: compose-logs
          path: |
            postgres.log
            api.log
          if-no-files-found: ignore

      - name: Teardown
        if: always()
        run: docker compose -f compose.yaml down -v
