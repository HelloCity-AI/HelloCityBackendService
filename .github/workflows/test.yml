name: test

on:
  push:
  pull_request:
    branches: [ main ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Check formatting
      run: dotnet format --verify-no-changes --verbosity diagnostic
      
    - name: Build
      run: dotnet build --no-restore --configuration Release --verbosity normal
      
    - name: Run static analysis
      run: dotnet build --no-restore --configuration Release --verbosity normal /p:TreatWarningsAsErrors=true

  unit-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: root123
          POSTGRES_USER: root
          POSTGRES_DB: HelloCityDb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Run unit tests
      run: dotnet test --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage"
      env:
        ConnectionStrings__DefaultConnection: "Host=localhost;Database=HelloCityDb;Username=root;Password=root123"
        ApiConfigs__DBConnection: "Host=localhost;Database=HelloCityDb;Username=root;Password=root123"
        
    - name: Generate coverage report
      run: |
        dotnet tool install -g dotnet-reportgenerator-globaltool
        reportgenerator \
          -reports:"**/coverage.cobertura.xml" \
          -targetdir:"coveragereport" \
          -reporttypes:Html
          
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coveragereport/
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.cobertura.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        
    - name: Comment coverage on PR
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        message: |
          ## ðŸ“Š Test Coverage Report
          
          Coverage report has been generated and uploaded as an artifact.
          
          **Test Results Summary:**
          - âœ… Unit tests completed
          - ðŸ“ˆ Coverage report available in artifacts
          - ðŸ”— Detailed coverage uploaded to Codecov
          
          Please review the coverage report to ensure adequate test coverage for your changes.

  api-verification:
    runs-on: ubuntu-latest
    needs: [code-quality, unit-tests]
    if: github.event_name == 'pull_request'
    
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: root123
          POSTGRES_USER: root
          POSTGRES_DB: HelloCityDb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Setup test database
      run: |
        dotnet ef database update --project HelloCity.Api/HelloCity.Api.csproj
      env:
        ConnectionStrings__DefaultConnection: "Host=localhost;Database=HelloCityDb;Username=root;Password=root123"
        ApiConfigs__DBConnection: "Host=localhost;Database=HelloCityDb;Username=root;Password=root123"
        
    - name: Run API verification
      run: |
        # Start the API in background
        dotnet run --project HelloCity.Api/HelloCity.Api.csproj &
        API_PID=$!
        
        # Wait for API to start
        sleep 10
        
        # Test API endpoints
        echo "Testing /api/TestUser endpoint..."
        curl -f http://localhost:5000/api/TestUser || exit 1
        echo "âœ… API verification passed"
        
        # Stop the API
        kill $API_PID
      env:
        ConnectionStrings__DefaultConnection: "Host=localhost;Database=HelloCityDb;Username=root;Password=root123"
        ApiConfigs__DBConnection: "Host=localhost;Database=HelloCityDb;Username=root;Password=root123"
        ASPNETCORE_ENVIRONMENT: Development